Log
	1 常用的SLF4j，log4j，logback，common-logging
	
	2 spring boot starter自带logback， 推荐使用logback
		<appender>
		<root>
		
	3 示例
		<?xml version="1.0" encoding="UTF-8"?>
		<configuration>
			<appender name="consoleApp" class="ch.qos.logback.core.ConsoleAppender">
				<layout class="ch.qos.logback.classic.PatternLayout">
					<pattern>
						%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level[%thread]%logger{56}.%method:%L -%msg%n
					</pattern>
				</layout>
			</appender>
			<appender name="fileInfoApp" class="ch.qos.logback.core.rolling.RollingFileAppender">
				<filter class="ch.qos.logback.classic.filter.LevelFilter">
					<level>ERROR</level>
					<onMatch>DENY</onMatch>
					<onMismatch>ACCEPT</onMismatch>
				</filter>
				<encoder>
					<pattern>
						%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level[%thread]%logger{56}.%method:%L -%msg%n
					</pattern>
				</encoder>
				<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
					<fileNamePattern>applog/log/app.%d.log</fileNamePattern>
					<MaxHistory>1</MaxHistory>
				</rollingPolicy>
			</appender>
			<appender name="fileErrorApp" class="ch.qos.logback.core.rolling.RollingFileAppender">
				<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
					<level>ERROR</level>
				</filter>
				<encoder>
					<pattern>
						%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level[%thread]%logger{56}.%method:%L -%msg%n
					</pattern>
				</encoder>
				<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
					<fileNamePattern>applog/log/app.err.%d.log</fileNamePattern>
					<MaxHistory>1</MaxHistory>
				</rollingPolicy>
			</appender>
			
			<root level="DEBUG">
				<appender-ref ref="consoleApp"/>
				<appender-ref ref="fileInfoApp" />
				<appender-ref ref="fileErrorApp" />
			</root>
		</configuration>
	4 log4j.properties可以在线转换为logback.xml
		